{"ast":null,"code":"import { ActivatedRouteSnapshot, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nexport let AuthGuard = /*#__PURE__*/(() => {\n  class AuthGuard {\n    constructor(auth, router) {\n      this.auth = auth;\n      this.router = router;\n    }\n\n    canActivate(next, state) {\n      if (this.auth.isAccessTokenInvalido()) {\n        console.log('Navegação com access token inválido. Obtendo novo token...');\n        return this.auth.obterNovoAccessToken().then(() => {\n          if (this.auth.isAccessTokenInvalido()) {\n            this.router.navigate(['/login']);\n            return false;\n          }\n\n          return this.podeAcessarRota(next.data.roles);\n        });\n      }\n\n      return this.podeAcessarRota(next.data.roles);\n    }\n\n    podeAcessarRota(roles) {\n      if (roles && !this.auth.temQualquerPermissao(roles)) {\n        this.router.navigate(['/nao-autorizado']);\n        return false;\n      }\n\n      return true;\n    }\n\n  }\n\n  AuthGuard.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n  };\n\n  AuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthGuard;\n})();","map":null,"metadata":{},"sourceType":"module"}