{"ast":null,"code":"import { HttpErrorResponse } from '@angular/common/http';\nimport { NotAuthenticatedError } from './../seguranca/money-http-interceptor';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"primeng/api\";\nimport * as i2 from \"@angular/router\";\nexport let ErrorHandlerService = /*#__PURE__*/(() => {\n  class ErrorHandlerService {\n    constructor(messageService, router) {\n      this.messageService = messageService;\n      this.router = router;\n    }\n\n    handle(errorResponse) {\n      let msg;\n\n      if (typeof errorResponse === 'string') {\n        msg = errorResponse;\n      } else if (errorResponse instanceof NotAuthenticatedError) {\n        console.log('erro refresh');\n        msg = 'Sua sessão expirou!';\n        this.router.navigate(['/login']);\n      } else if (errorResponse instanceof HttpErrorResponse && errorResponse.status >= 400 && errorResponse.status <= 499) {\n        msg = 'Ocorreu um erro ao processar a sua solicitação';\n\n        if (errorResponse.status === 403) {\n          msg = 'Você não tem permissão para executar esta ação';\n        }\n\n        try {\n          msg = errorResponse.error[0].mensagemUsuario;\n        } catch (e) {}\n\n        console.error('Ocorreu um erro', errorResponse);\n      } else {\n        msg = 'Erro ao processar serviço remoto. Tente novamente.';\n        console.error('Ocorreu um erro', errorResponse);\n      }\n\n      this.messageService.add({\n        severity: 'error',\n        detail: msg\n      });\n    }\n\n  }\n\n  ErrorHandlerService.ɵfac = function ErrorHandlerService_Factory(t) {\n    return new (t || ErrorHandlerService)(i0.ɵɵinject(i1.MessageService), i0.ɵɵinject(i2.Router));\n  };\n\n  ErrorHandlerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ErrorHandlerService,\n    factory: ErrorHandlerService.ɵfac,\n    providedIn: 'root'\n  });\n  return ErrorHandlerService;\n})();","map":null,"metadata":{},"sourceType":"module"}