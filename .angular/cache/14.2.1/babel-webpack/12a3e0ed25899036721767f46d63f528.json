{"ast":null,"code":"import { environment } from './../../environments/environment';\nimport { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nexport class LancamentoFiltro {\n  constructor() {\n    this.pagina = 0;\n    this.itensPorPagina = 5;\n  }\n\n}\nexport let LancamentoService = /*#__PURE__*/(() => {\n  class LancamentoService {\n    constructor(http, datePipe) {\n      this.http = http;\n      this.datePipe = datePipe;\n      this.lancamentosUrl = `${environment.apiUrl}/lancamentos`;\n    }\n\n    pesquisar(filtro) {\n      let params = new HttpParams().set('page', filtro.pagina).set('size', filtro.itensPorPagina);\n\n      if (filtro.descricao) {\n        params = params.set('descricao', filtro.descricao);\n      }\n\n      if (filtro.dataVencimentoInicio) {\n        params = params.set('dataVencimentoDe', this.datePipe.transform(filtro.dataVencimentoInicio, 'yyyy-MM-dd'));\n      }\n\n      if (filtro.dataVencimentoFim) {\n        params = params.set('dataVencimentoAte', this.datePipe.transform(filtro.dataVencimentoFim, 'yyyy-MM-dd'));\n      }\n\n      return this.http.get(`${this.lancamentosUrl}?resumo`, {\n        params\n      }).toPromise().then(response => {\n        const lancamentos = response['content'];\n        const resultado = {\n          lancamentos,\n          total: response['totalElements']\n        };\n        return resultado;\n      });\n    }\n\n    excluir(codigo) {\n      return this.http.delete(`${this.lancamentosUrl}/${codigo}`).toPromise();\n    }\n\n    adicionar(lancamento) {\n      return this.http.post(this.lancamentosUrl, lancamento).toPromise();\n    }\n\n    atualizar(lancamento) {\n      return this.http.put(`${this.lancamentosUrl}/${lancamento.codigo}`, lancamento).toPromise().then(response => {\n        this.converterStringsParaDatas([response]);\n        return response;\n      });\n    }\n\n    buscarPorCodigo(codigo) {\n      return this.http.get(`${this.lancamentosUrl}/${codigo}`).toPromise().then(response => {\n        this.converterStringsParaDatas([response]);\n        return response;\n      });\n    }\n\n    converterStringsParaDatas(lancamentos) {\n      for (const lancamento of lancamentos) {\n        let offset = new Date().getTimezoneOffset() * 60000;\n        lancamento.dataVencimento = new Date(new Date(lancamento.dataVencimento).getTime() + offset);\n\n        if (lancamento.dataPagamento) {\n          lancamento.dataPagamento = new Date(new Date(lancamento.dataPagamento).getTime() + offset);\n        }\n      }\n    }\n\n  }\n\n  LancamentoService.ɵfac = function LancamentoService_Factory(t) {\n    return new (t || LancamentoService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.DatePipe));\n  };\n\n  LancamentoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LancamentoService,\n    factory: LancamentoService.ɵfac,\n    providedIn: 'root'\n  });\n  return LancamentoService;\n})();","map":null,"metadata":{},"sourceType":"module"}